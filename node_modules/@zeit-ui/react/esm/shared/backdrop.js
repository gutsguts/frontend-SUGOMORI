import _JSXStyle from "styled-jsx/style";
import React, { useCallback } from 'react';
import withDefaults from '../utils/with-defaults';
import useTheme from '../styles/use-theme';
import CSSTransition from './css-transition';
var defaultProps = {
  onClick: function onClick() {},
  visible: false,
  offsetY: 0
};
var Backdrop = React.memo(function (_ref) {
  var children = _ref.children,
      onClick = _ref.onClick,
      visible = _ref.visible,
      offsetY = _ref.offsetY;
  var theme = useTheme();
  var clickHandler = useCallback(function (event) {
    onClick && onClick(event);
  }, []);
  var childrenClickHandler = useCallback(function (event) {
    event.stopPropagation();
  }, []);
  return /*#__PURE__*/React.createElement(CSSTransition, {
    visible: visible,
    clearTime: 300
  }, /*#__PURE__*/React.createElement("div", {
    onClick: clickHandler,
    className: _JSXStyle.dynamic([["1019800105", [offsetY, theme.expressiveness.portalOpacity]]]) + " " + "backdrop"
  }, /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["1019800105", [offsetY, theme.expressiveness.portalOpacity]]]) + " " + "layer"
  }), /*#__PURE__*/React.createElement("div", {
    onClick: childrenClickHandler,
    className: _JSXStyle.dynamic([["1019800105", [offsetY, theme.expressiveness.portalOpacity]]]) + " " + "content"
  }, children), /*#__PURE__*/React.createElement("div", {
    onClick: childrenClickHandler,
    className: _JSXStyle.dynamic([["1019800105", [offsetY, theme.expressiveness.portalOpacity]]]) + " " + "offset"
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1019800105",
    dynamic: [offsetY, theme.expressiveness.portalOpacity]
  }, ".backdrop.__jsx-style-dynamic-selector{position:fixed;top:0;left:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100vh;width:100vw;overflow:auto;z-index:1000;}.content.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:relative;z-index:1001;outline:none;}.offset.__jsx-style-dynamic-selector{height:".concat(offsetY, "vh;opacity:0;background-color:transparent;}.layer.__jsx-style-dynamic-selector{position:fixed;top:0;left:0;right:0;bottom:0;width:100%;height:100%;opacity:").concat(theme.expressiveness.portalOpacity, ";background-color:black;-webkit-transition:opacity 0.35s cubic-bezier(0.4,0,0.2,1);transition:opacity 0.35s cubic-bezier(0.4,0,0.2,1);pointer-events:none;z-index:1000;}"))));
});
export default withDefaults(Backdrop, defaultProps);